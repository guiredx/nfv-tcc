Vagrant.configure("2") do |config|

  # VM com Open vSwitch
  config.vm.define "openvswitch" do |ovs|
    ovs.vm.box = "ubuntu/bionic64"
    ovs.vm.hostname = "openvswitch"
    ovs.vm.provider "virtualbox" do |vb|
      vb.memory = "1024"
      vb.cpus = 1
      vb.name = "vagrant_openvswtich"
    end
    ovs.vm.provision "shell", inline: <<-SHELL
      apt update
      apt install -y openvswitch-switch iproute2 net-tools

      # Criar bridge br-wan
      ovs-vsctl add-br br-wan

      # Criar interfaces TAP (simulando cabos para outras VMs)
      ip tuntap add mode tap eth1_fw
      ip tuntap add mode tap eth2_bgp

      # Ativar as interfaces TAP
      ip link set eth1_fw up
      ip link set eth2_bgp up

      # Adicionar interfaces TAP à bridge
      ovs-vsctl add-port br-wan eth1_fw
      ovs-vsctl add-port br-wan eth2_bgp

      # Subir a bridge
      ip link set br-wan up
    SHELL
  end

  # VM Firewall (conectada à eth1_fw da VM openvswitch)
  config.vm.define "firewall" do |fw|
    fw.vm.box = "ubuntu/bionic64"
    fw.vm.hostname = "firewall"
    fw.vm.provider "virtualbox" do |vb|
      vb.memory = "1024"
      vb.cpus = 2
      vb.name = "vagrant_firewall"
    end
    fw.vm.network "private_network", type: "dhcp", auto_config: false
  end

  # VM BGP (conectada à eth2_bgp da VM openvswitch)
  config.vm.define "bgp" do |bgp|
    bgp.vm.box = "ubuntu/bionic64"
    bgp.vm.hostname = "bgp"
    bgp.vm.provider "virtualbox" do |vb|
      vb.memory = "512"
      vb.cpus = 1
      vb.name = "vagrant_bgp"
    end
    bgp.vm.network "private_network", type: "dhcp", auto_config: false
  end

end